module router_sync_tb;
reg clock,resetn,detect_add,empty_0,empty_1,empty_2,full_0,
                    full_1,full_2,read_enb_0,read_enb_1,read_enb_2,write_enb_reg;
reg [1:0] data_in;
wire vld_out_0,vld_out_1,vld_out_2;
wire fifo_full,soft_reset_0,soft_reset_1,soft_reset_2;
wire [2:0] write_enb;
integer i;

router_sync dut (clock,resetn,detect_add,empty_0,empty_1,empty_2,full_0,
                    full_1,full_2,read_enb_0,read_enb_1,read_enb_2,write_enb_reg,data_in, 
		    vld_out_0,vld_out_1,vld_out_2,fifo_full,soft_reset_0,soft_reset_1,soft_reset_2,write_enb);

//=================================================CLOCK GENERATION================================================
initial
begin
   clock=0;
forever#5 clock=~clock;
end
 

//==================================================RESET TASK=====================================================
task rst_t;
  begin
	 @(negedge clock);
	 resetn=1'b0;
	 @(negedge clock);
	 resetn=1'b1;
      end
endtask


//==================================================DETECT TASK====================================================
task detect_t;
  begin
         @(negedge clock);
	 detect_add=1'b1;
	 @(negedge clock);
	 detect_add=1'b0;
      end
endtask


//=================================================FULL & EMPTY TASK================================================
task full_empty;
begin
  empty_0=0;empty_1=0;empty_2=1;full_0=1;
                    full_1=1;full_2=0;
end
endtask


//=================================================DATA IN TASK=====================================================
task data(input[1:0]a);
 begin
       
       data_in=a;
       @(negedge clock);
       
  end
endtask


//=================================================TEST=============================================================
initial
  begin
        rst_t;
        data(2'b01);
        detect_t;
        full_empty;
        
        data(2'b10);  
         #320;
        read_enb_1=1'b1;
        write_enb_reg=1'b1;
         
#200 $finish;
end
endmodule 

